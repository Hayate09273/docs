




























[{"body":"バージョンの選び方 Java Edition 1.17はJava 16で開発されています。\nそのため、Java Edition 1.17以降のサーバーが必要な場合、Java 16以降をインストールする必要があります。\nJavaとMinecraftサーバーのバージョン別互換性 JavaとMinecraftサーバーのバージョン別互換性についていくつかの組み合わせで検証し、下の表にまとめました。\nJavaには後方互換性があるため、Java 16で古いソフトウェアを動作させることも可能ですが、安定して動作するかは分かりません。\n    Java 8 Java 11 Java 16     公式 1.2.1~1.16.5 O O O   公式 1.17.1 X X O   Spigot 1.8.8~1.16.5 O O O   Spigot 1.17~ X X O   BungeeCord #1598 O O O    JavaとBuildToolsのバージョン別互換性 Spigotを使用する場合、どのJavaバージョンでどのMinecraftバージョンのビルドが可能かを確認しておくと良いと思います。\n「ビルドはできないけど、実行はできる」ということもありますので、少し注意が必要です。 こちらもいくつかの組み合わせで検証しました。\n    Java 8 Java 11 Java 16     1.8.8 O X X   1.10.2 O X X   1.12.2 O X X   1.14.4 O O X   1.16.5 O O O   1.17.1 X X O    参考にしたサイト Java - Wikipedia\nJavaバージョン履歴 - Wikipedia\n","categories":"","description":"Javaバージョンの選び方の解説","excerpt":"Javaバージョンの選び方の解説","ref":"/docs/java/version/","tags":"","title":"バージョンの選び方"},{"body":"インストール Ubuntuの場合は、aptを使用してインストールするのが良いと思います。\nこのコマンドを実行すると、Java 16がインストールされます。\n$ sudo apt update $ sudo apt install openjdk-16-jre -y 古いバージョンのJavaを使用したい場合は、「16」の部分を他の数字に置き換えてください。\n$ sudo apt install openjdk-11-jre -y $ sudo apt install openjdk-8-jre -y バージョンを確認 「java -version」でバージョンを確認します。このように表示されたらインストール完了です。\nダブルクオーテーションで囲まれた部分がバージョンです。\n$ java -version openjdk version \"16.0.1\" 2021-04-20 OpenJDK Runtime Environment (build 16.0.1+9-Ubuntu-120.04) OpenJDK 64-Bit Server VM (build 16.0.1+9-Ubuntu-120.04, mixed mode, sharing) ","categories":"","description":"UbuntuにJavaをインストールする方法","excerpt":"UbuntuにJavaをインストールする方法","ref":"/docs/java/ubuntu/","tags":"","title":"UbuntuにJavaをインストール"},{"body":"サーバーソフトの種類 Minecraftのサーバーソフトには様々な種類があります。そのため、それぞれの違いについて最初に解説します。\n公式サーバー 公式が配布しているサーバーソフトです。バニラサーバーとも呼ばれます。\n他のものと比べると機能が少ないため、難易度は一番低いです。初めての方はこれを使用してみると良いと思います。\nSpigot 有志が開発しているサーバーソフトです。\nプラグインが使用出来るため、自由度が高いです。\nプラグインを使用することで、建物の保護が出来たり（WorldGuard）、Discordとサーバー内のチャットを繋げることが出来るようになります（DiscordSRV）。\nPaper Spigotを改良したサーバーソフトです。\n「Spigotに比べて高速」と公式は謳っています。Spigotと互換性があるため、Spigotのプラグインが使用出来ます。\nBungeeCord サーバーとサーバーを繋げるためのソフトです。\n図に表すとこのようになります。 プレイヤーはBungeeCordを経由して、複数のサーバーを行き来することが出来ます。\nflowchart TD プレイヤー \u003c--\u003e BungeeCord BungeeCord \u003c--\u003e ロビーサーバー BungeeCord \u003c--\u003e 生活サーバー BungeeCord \u003c--\u003e ミニゲームサーバー 参考にしたサイト PaperMC - The High Performance Fork\n","categories":"","description":"サーバーソフトの解説","excerpt":"サーバーソフトの解説","ref":"/docs/software/","tags":"","title":"サーバーソフト"},{"body":"このページでは、Minecraftサーバーの建て方について解説します。\n公式サーバー・Spigotサーバーの構築方法や、ポート開放の方法などについての記事も作成する予定です。\n","categories":"","description":"","excerpt":"このページでは、Minecraftサーバーの建て方について解説します。\n公式サーバー・Spigotサーバーの構築方法や、ポート開放の方法など …","ref":"/docs/","tags":"","title":"サーバーを建てる"},{"body":"このページでは、サーバーを動作させるために必要なJavaのインストール方法について説明していきます。\n Java（ジャバ、ジャヴァ）は、汎用プログラミング言語とソフトウェアプラットフォームの双方を指している総称ブランドである。\n出典: Java - Wikipedia\n ","categories":"","description":"Javaのインストール方法","excerpt":"Javaのインストール方法","ref":"/docs/java/","tags":"","title":"Javaのインストール"},{"body":"このページでは、公式サーバーを構築する方法について解説していきます。\nJavaがインストール済みであることが前提です。 Javaのインストール方法はこちら\n","categories":"","description":"公式サーバーの構築方法","excerpt":"公式サーバーの構築方法","ref":"/docs/vanilla/","tags":"","title":"公式サーバー"},{"body":"ここでは、Spigotサーバーを構築する方法について解説していきます。\nJavaがインストール済みであることが前提です。 Javaのインストール方法はこちら\n","categories":"","description":"Spigotサーバーの構築方法","excerpt":"Spigotサーバーの構築方法","ref":"/docs/spigot/","tags":"","title":"Spigot"},{"body":"このページでは、BungeeCordを構築する方法について説明していきます。\nJavaがインストール済みであることが前提です。 Javaのインストール方法はこちら\n","categories":"","description":"BungeeCordの構築方法","excerpt":"BungeeCordの構築方法","ref":"/docs/bungeecord/","tags":"","title":"BungeeCord"},{"body":"このページでは、Linuxについて解説していきます。\n","categories":"","description":"Linuxについての解説","excerpt":"Linuxについての解説","ref":"/docs/linux/","tags":"","title":"Linux"},{"body":"サーバーのファイルをダウンロード まず、サーバー用のディレクトリを作成し、そのディレクトリに移動します。\n名前はわかりやすいものにしておくと良いと思います。\n$ mkdir server \u0026\u0026 cd server サーバーのファイルをダウンロードします。このURLは1.17.1のものです。\n$ wget https://launcher.mojang.com/v1/objects/a16d67e5807f57fc4e550299cf20226194497dc2/server.jar lsコマンドでserver.jarが存在することを確認しておきます。\n$ ls server.jar サーバーを実行する まず、サーバーを実行するためのスクリプトを作成し、お好きなエディタで編集します。 ここでは、start.shを作成し、nanoで編集します。\n$ nano start.sh 下の内容をstart.shに書き込みます。\n#!/bin/bash java -Xms1G -Xmx1G -jar server.jar nogui 所有者を設定して、所有者にstart.shを実行する権限を与えます。 ここでは、所有者のユーザー名をcentosとします。\n$ chown centos start.sh $ chmod 700 start.sh 実行します。\n$ ./start.sh 初回起動時はこのような表示が出て、強制的に終了されます。\n[main/ERROR]: Failed to load properties from file: server.properties [main/WARN]: Failed to load eula.txt [main/INFO]: You need to agree to the EULA in order to run the server. Go to eula.txt for more info. これは、「EULAに同意してください」というメッセージです。EULAに同意するために、「eula.txt」を編集します。\n$ nano eula.txt #By changing the setting below to TRUE you are indicating your agreement to our EULA (https://account.mojang.com/documents/minecraft_eula). #Sat Aug 14 21:23:03 JST 2021 eula=false 「eula=false」となっている部分を、「eula=true」に書き換えて、保存してください。\nもう一度start.shを実行します。\n$ ./start.sh 設定が読み込まれ、ワールドが生成されます。\nDone!と表示されたら成功です！\n[Server thread/INFO]: Done (62.449s)! For help, type \"help\" サーバーを終了する場合は、「stop」と入力してEnterキーを押してください。\n\u003estop ","categories":"","description":"CentOS Stream 8に公式サーバーを構築する方法","excerpt":"CentOS Stream 8に公式サーバーを構築する方法","ref":"/docs/vanilla/centos8/","tags":"","title":"CentOS Stream 8に公式サーバーを構築"},{"body":"Spigotの設定 BungeeCordとSpigotを接続するために、Spigotで行う設定です。\nserver.properties  online-mode\ntrueからfalseに変更してください。\nこの項目をfalseにするとSpigotは正規ユーザーかどうかを確認しませんが、代わりにBungeeCordで確認するので問題ありません。 server-port\n1024から49151までの範囲で、他のソフトウェアと被らない番号に変更してください。\nMinecraft Java Editionのマルチプレイでは25565を標準で使用するので、25565をBungeeCordに割り当てて、それ以外の数字をSpigotに割り当てると良いと思います。  spigot.yml  bungeecord:\nfalseからtrueに変更してください。  bukkit.yml  connection-throttle:\n-1に変更してください。\nこれは、接続する速さが設定した値より早かった場合、それを弾くものですが、BungeeCordを使用する際は無効化する方が良いです。  ","categories":"","description":"BungeeCordとSpigotを接続する方法","excerpt":"BungeeCordとSpigotを接続する方法","ref":"/docs/bungeecord/spigot/","tags":"","title":"Spigotサーバーを接続"},{"body":"コマンド server 現在接続しているサーバーと、接続できるサーバーの一覧を表示、またはサーバー間を移動するコマンドです。\n現在接続しているサーバーと、接続できるサーバーの一覧は「/server」、lobbyサーバーに移動するには、「/server lobby」と入力します。\nlist 現在どのサーバーに誰がいるのか表示するコマンドです。\n「/list」ではなく「/glist」で表示できます。\nalert BungeeCordに接続されているサーバー全体にメッセージを流すコマンドです。メッセージはチャットに表示されます。\n「/alert 内容」\nend BungeeCordを終了するコマンドです。\nip 現在接続しているプレイヤーのIPアドレスを表示するコマンドです。\n「/ip MCID」\nreload BungeeCordのconfigファイルを再読込するコマンドです。\n「/reload」ではなく「/gloread」です。\n","categories":"","description":"BungeeCordのコマンドの解説","excerpt":"BungeeCordのコマンドの解説","ref":"/docs/bungeecord/command/","tags":"","title":"BungeeCordのコマンド"},{"body":"権限 デフォルトの設定は以下のようになっています。defaultにはserverとlistコマンド、adminにはalert、end、ip、reloadコマンドを実行する権限が与えられています。\npermissions:default:- bungeecord.command.server- bungeecord.command.listadmin:- bungeecord.command.alert- bungeecord.command.end- bungeecord.command.ip- bungeecord.command.reloadAdminを追加する configファイルのgroupsという項目で編集します。 デフォルトはmd_5（BungeeCordの開発者）がadminに割り当てられています。 このmd_5の部分を自分のIDに書き換えてください。\ngroups:md_5:- admingroups:Hayate_0927:- admin設定項目 player_limit BungeeCordの最大接続人数です。-1で無制限になります。\nmax_players 見かけ上の最大接続人数です。お好きな数字を入力してください。\nservers BungeeCordのメインの機能である、他のMinecraftサーバーを接続するための設定項目です。\n例: BungeeCordと同じマシンに建てられた25566ポートのlobbyサーバーを追加\nservers:lobby:motd:Lobby Serveraddress:localhost:25566restricted:false","categories":"","description":"BungeeCordのconfigファイルの解説","excerpt":"BungeeCordのconfigファイルの解説","ref":"/docs/bungeecord/config/","tags":"","title":"BungeeCordの設定"},{"body":"インストール CentOS Stream 8の場合は、dnfを使用してインストールするのが良いと思います。\nこのコマンドを実行すると、Java 17がインストールされます。\n$ sudo dnf install java-17-openjdk -y 古いバージョンのJavaを使用したい場合は、「17」の部分を他の数字に置き換えてください。\n$ sudo dnf install java-11-openjdk -y $ sudo dnf install java-1.8.0-openjdk -y バージョンを確認 「java -version」でバージョンを確認します。このように表示されたらインストール完了です。\nダブルクオーテーションで囲まれた部分がバージョンです。\n$ java -version openjdk version \"17-ea\" 2021-09-14 OpenJDK Runtime Environment 21.9 (build 17-ea+33) OpenJDK 64-Bit Server VM 21.9 (build 17-ea+33, mixed mode, sharing) ","categories":"","description":"CentOS Stream 8にJavaをインストールする方法","excerpt":"CentOS Stream 8にJavaをインストールする方法","ref":"/docs/java/centos8/","tags":"","title":"CentOS Stream 8にJavaをインストール"},{"body":"導入 Japan Minecraft Serversは、Minecraftでマルチプレイを楽しんでいる人が一度は見たことがあると思います。\nJapan Minecraft Serversにはバナーという機能があり、これをWebサイトに埋め込むことで、現在のオンラインプレイヤー数やIPアドレスをお洒落に表示されることができます。\nサーバーのページに飛び、「バナー」タブをクリックして、バナータイプを選択します。\nするとこのようなHTMLのコードが生成されます。\n\u003ca href=\"リンク\"\u003e\u003cimg src=\"画像リンク\"/\u003e\u003c/a\u003e Markdown これをMarkdownで表示させるには、このようにします。\n[![](画像リンク)](リンク) ","categories":"","description":"","excerpt":"導入 Japan Minecraft Serversは、Minecraftでマルチプレイを楽しんでいる人が一度は見たことがあると思います。 …","ref":"/blog/jms-banner/","tags":"","title":"Japan Minecraft ServersのバナーをMarkdownで埋め込む"},{"body":"インストール Arch Linuxの場合は、pacmanを使用してインストールするのが良いと思います。 Arch Linuxは、Java 7、8、11、16を公式でサポートしています。\nこのコマンドを実行すると、最新のJavaがインストールされます。 2021年9月17日現在では、Java 16がインストールされました。\n$ sudo pacman -S jre-openjdk 古いバージョンのJavaを使用したい場合は、「jre」の部分を「jre11」などに変更してください。\n$ sudo pacman -S jre11-openjdk $ sudo pacman -S jre8-openjdk バージョンを確認 「java -version」でバージョンを確認します。このように表示されたらインストール完了です。\nダブルクオーテーションで囲まれた部分がバージョンです。\nopenjdk version \"16.0.2\" 2021-07-20 OpenJDK Runtime Environment (build 16.0.2+7) OpenJDK 64-Bit Server VM (build 16.0.2+7, mixed mode) 参考にしたサイト Java - ArchWiki\n","categories":"","description":"Arch LinuxにJavaをインストールする方法","excerpt":"Arch LinuxにJavaをインストールする方法","ref":"/docs/java/arch/","tags":"","title":"Arch LinuxにJavaをインストール"},{"body":"インストーラーのダウンロード Oracleの公式サイトからJavaをダウンロードします。\nバージョンは8、11、16がありますが、Minecraft Java Edition 1.17ではJava 16が要件となっているので、16をお勧めします。\n「JDK Download」をクリックし、「Windows x64 Installer」の右にあるファイル名をクリックします。\nチェックボックスにチェックを入れて同意し、緑色のダウンロードボタンをクリックします。\nインストール 先ほどダウンロードしたインストーラーを起動します。ユーザーアカウント制御の確認画面が表示されたら「はい」をクリックしてください。 セットアップが始まります。\n「Java SE Development Kit 16.0.2のインストール・ウィザードへようこそ\nこのウィザードでは、Java SE Development Kit 16.0.2のインストール・プロセスを順を追って説明します。」\nこの画面では次を選択します。\n「プライベートJREおよびsrc.zipを含むJava(TM) SE Development Kit 16.0.2 (64-bit)。 ハードドライブに420MBが必要です。インストール・フォルダを変更するには、『変更』ボタンをクリックします。」\nこの画面では、インストールフォルダを変更しない場合は次を選択します。\nコンピューターにJavaがインストールされるので、少し待ちます。\n「Java(TM) SE Development Kit 16.0.2 (64-bit)が正常にインストールされました」\nこの画面が表示されたら、閉じるを選択して終了します。\nJavaのPATHの確認  スタートボタンを右クリックし、「Windows PowerShell(I)」をクリックします。 「java -version」と入力してEnterキーを押します。 Javaのバージョンが表示されていたらOKです。  ","categories":"","description":"WindowsにJavaをインストールする方法","excerpt":"WindowsにJavaをインストールする方法","ref":"/docs/java/windows/","tags":"","title":"WindowsにJavaをインストール"},{"body":"サーバーファイルのダウンロード  サーバーのファイルを保管するためのフォルダを好きな場所に作成してください。 Minecraft Launcherを開き、「起動構成」タブ、「New installation」をクリックします。 バージョンの欄でお好きなバージョンを選び、右上の「サーバー」をクリックします。 1.で作成したフォルダの中にserver.jarを保存します。     現在のフォルダの中身     server.jar    サーバーを実行 スタートスクリプトを作成 server.jarと同じフォルダ内に、スタートスクリプトを作成します。\n名前は「start.bat」など分かりやすいものに変更してください。\n拡張子は一度txtファイルを作成してから、batに変更してください。\n作成したスタートスクリプトを編集 拡張子が.batの場合、ダブルクリックするとコマンドプロンプトが起動するので、編集する場合はstart.batを選択して右クリック→編集(E)をクリックしてください。\n@ECHO OFF java -Xms1G -Xmx1G -jar server.jar nogui PAUSE    現在のフォルダの中身     server.jar   start.bat    start.batを実行 start.batを実行してください。\nコマンドプロンプトが起動しますが、怖くありません。\n初回起動時には「You need to agree to the EULA in order to run the server. Go to eula.txt for more info.」という表示が出て、強制的に終了されます。\nこれは、「EULAに同意してください」というメッセージです。\nEULAに同意するために、「eula.txt」を編集します。 eula=falseをeula=trueに変更し、保存します。\n   現在のフォルダの中身     logs   eula.txt   server.jar   server.properties   start.bat    もう一度start.batを実行 もう一度start.batを実行します。\n設定が読み込まれ、ワールドが生成されます。「Done!」と表示されていたらOKです！\n   現在のフォルダの中身     logs   world   banned-ips.json   banned-players.json   eula.txt   ops.json   server.jar   server.properties   start.bat   usercache.json   whitelist.json    サーバーを終了する コンソールに「stop」と入力してEnterキーを押してください。\nデータが保存された後、「続行するには何かキーを押してください」と表示されたら、何かキーを押してウインドウを閉じます。\n","categories":"","description":"Windowsに公式サーバーを構築する方法","excerpt":"Windowsに公式サーバーを構築する方法","ref":"/docs/vanilla/windows/","tags":"","title":"Windowsに公式サーバーを構築"},{"body":"このページでは、Linuxディストリビューションについて解説していきます。 Linuxディストリビューションを大きく3つに分けると次のようになります。\nDebian系  Debian\n100%自由ソフトウェアであることを理念として開発されたOS。 Ubuntu\nDebianから派生したOS。世界的にかなり人気です。デスクトップ用途とサーバー用途どちらにも使われることが多いと思います。また、Ubuntuから派生したOSもかなり多いです。 Linux Mint\nUbuntuから派生したOSの一つ。デスクトップ用途で使われることが多いと思います。  RedHat系  RedHat Enterprise Linux (RHEL)\n主に企業向けのOS。個人で使うことはあまりないと思います。 CentOS\nRHELとの完全互換を目指したOS。サーバー用途で使われることが多いと思います。  Arch系  Arch Linux\nシンプルなOS。初期状態でインストールされているソフトはかなり少ないですが、カスタマイズ性が高いとも言えます。 Manjaro\nArch Linuxベースのお洒落で使いやすいOS。Arch Linuxに比べるとハードルが低いです。デスクトップ用途で使われることが多いと思います。  ","categories":"","description":"Linuxディストリビューションの解説","excerpt":"Linuxディストリビューションの解説","ref":"/docs/linux/distribution/","tags":"","title":"Linuxディストリビューション"},{"body":"ls ディレクトリの中に存在するファイルやディレクトリを表示するコマンドです。\nオプション lsコマンドのオプションです。\n$ ls -la などのように、複数のオプションを同時に使うこともできます。\n-laの場合は、隠しファイルなども含めて、ファイルやディレクトリの詳細を表示するということになります。\n -a 隠しファイルなども全て表示 -l 最終更新時間などの詳細も表示 -t 最終更新時間の新しい順に表示 -r 逆順に表示 -1 縦に並べて表示 -x 横に並べて表示 -S ファイルサイズ順に表示 -X 拡張子順に表示 -R ディレクトリの中身も表示  pwd 現在いるディレクトリを表示するコマンドです。\n$ pwd /home/ubuntu cd 指定したディレクトリへ移動するコマンドです。\n$ cd dir1 mkdir ディレクトリを作成するコマンドです。\n$ mkdir dir1 $ ls dir1 rmdir 空のディレクトリを削除するコマンドです。\n中身ごと削除したい場合は、rmコマンドを使用します。\n$ ls -R dir1 ./dir1: $ rmdir dir1 $ ls touch ファイルを作成するコマンドです。\n$ touch file $ ls file rm ファイルやディレクトリを削除するコマンドです。\n$ ls file $ rm file $ ls cp ファイルやディレクトリをコピーするコマンドです。\n使用例の解説を書こうと思ったらめっちゃ長くなりました。\n pwdコマンドで現在のディレクトリを確認 lsコマンドで現在のディレクトリに保存されているファイルやディレクトリの一覧を表示\n-Rオプションが付いているので、現在のディレクトリに保存されているディレクトリの中身も表示されますが、現在は中身がないので何も表示されていません。 catコマンドでfile1の中身を表示 file1をdir1の中に「file1_copy」というファイル名でコピー 再びlsコマンドでファイルやディレクトリの一覧を表示 dir1の中に「file1_copy」があることを確認 catコマンドでdir1/file1_copyの中身がfile1と同じ「Hello World!」であることを確認  $ pwd /home/ubuntu $ ls -R dir1 file1 ./dir1: $ cat file1 Hello World! $ cp file1 dir1/file1_copy $ ls -R dir1 file1 ./dir1: file1_copy $ cat dir1/file1_copy Hello World! グラフで表すとこのようになります。 青で囲んだものはディレクトリです。\ngraph LR home:::dir---ubuntu:::dir---dir1:::dir ubuntu:::dir---file1 dir1:::dir---file1_copy classDef dir stroke:blue mv ファイル名やディレクトリ名を変更したり、ファイルやディレクトリを移動させるコマンドです。\n例　ファイル名を「file」から「file1」へ変更\n$ ls file $ mv file file1 $ls file1 例　「file」を「dir」の中へ移動\n$ ls -R dir file $ mv file dir/. $ ls -R dir ./dir: file ","categories":"","description":"基本的なLinuxコマンドの解説","excerpt":"基本的なLinuxコマンドの解説","ref":"/docs/linux/command/","tags":"","title":"コマンド"},{"body":"症状  Spigot起動時に「Could not load ‘plugins/LuckPerms-Bukkit-5.3.47.jar’ in folder ‘plugins’」というエラーが出る。 pluginsディレクトリ内にLuckPermsディレクトリが生成されない。  発生した環境  さくらのVPS V5 4Gプラン Ubuntu 20.04 LTS オプションの追加ストレージ(NFS)を使用  原因 NFSを/mntディレクトリにマウントしていたから。\n解決方法 /mntディレクトリではない場所にNFSをマウントするようにすることで解決しました。\nここでは、/home/ubuntu/nfsにマウントするように変更しました。\n$ sudo unmount /mnt $ sudo mount -t nfs 192.168.1.2:/export /home/ubuntu/nfs $ sudo crontab -e @reboot mount -t nfs 192.168.1.2:/export /home/ubuntu/nfs エラーログ [16:26:32] [Server thread/ERROR]: Could not load 'plugins/LuckPerms-Bukkit-5.3.47.jar' in folder 'plugins' org.bukkit.plugin.InvalidPluginException: me.lucko.luckperms.common.loader.LoadingException: Unable to create a temporary file at org.bukkit.plugin.java.JavaPluginLoader.loadPlugin(JavaPluginLoader.java:133) ~[spigot-1.11.2.jar:git-Spigot-3fb9445-6e3cec8] at org.bukkit.plugin.SimplePluginManager.loadPlugin(SimplePluginManager.java:329) ~[spigot-1.11.2.jar:git-Spigot-3fb9445-6e3cec8] at org.bukkit.plugin.SimplePluginManager.loadPlugins(SimplePluginManager.java:251) [spigot-1.11.2.jar:git-Spigot-3fb9445-6e3cec8] at org.bukkit.craftbukkit.v1_11_R1.CraftServer.loadPlugins(CraftServer.java:301) [spigot-1.11.2.jar:git-Spigot-3fb9445-6e3cec8] at net.minecraft.server.v1_11_R1.DedicatedServer.init(DedicatedServer.java:204) [spigot-1.11.2.jar:git-Spigot-3fb9445-6e3cec8] at net.minecraft.server.v1_11_R1.MinecraftServer.run(MinecraftServer.java:544) [spigot-1.11.2.jar:git-Spigot-3fb9445-6e3cec8] at java.base/java.lang.Thread.run(Thread.java:831) [?:?] Caused by: me.lucko.luckperms.common.loader.LoadingException: Unable to create a temporary file at me.lucko.luckperms.common.loader.JarInJarClassLoader.extractJar(JarInJarClassLoader.java:135) ~[?:?] at me.lucko.luckperms.common.loader.JarInJarClassLoader.\u003cinit\u003e(JarInJarClassLoader.java:61) ~[?:?] at me.lucko.luckperms.bukkit.loader.BukkitLoaderPlugin.\u003cinit\u003e(BukkitLoaderPlugin.java:40) ~[?:?] at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?] at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78) ~[?:?] at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?] at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499) ~[?:?] at java.base/java.lang.reflect.ReflectAccess.newInstance(ReflectAccess.java:128) ~[?:?] at java.base/jdk.internal.reflect.ReflectionFactory.newInstance(ReflectionFactory.java:350) ~[?:?] at java.base/java.lang.Class.newInstance(Class.java:642) ~[?:?] at org.bukkit.plugin.java.PluginClassLoader.\u003cinit\u003e(PluginClassLoader.java:76) ~[spigot-1.11.2.jar:git-Spigot-3fb9445-6e3cec8] at org.bukkit.plugin.java.JavaPluginLoader.loadPlugin(JavaPluginLoader.java:129) ~[spigot-1.11.2.jar:git-Spigot-3fb9445-6e3cec8] ... 6 more Caused by: java.nio.file.AccessDeniedException: /tmp/luckperms-jarinjar7200033458096106022.jar.tmp at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:90) ~[?:?] at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:106) ~[?:?] at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111) ~[?:?] at java.base/sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:219) ~[?:?] at java.base/java.nio.file.Files.newByteChannel(Files.java:375) ~[?:?] at java.base/java.nio.file.Files.createFile(Files.java:652) ~[?:?] at java.base/java.nio.file.TempFileHelper.create(TempFileHelper.java:135) ~[?:?] at java.base/java.nio.file.TempFileHelper.createTempFile(TempFileHelper.java:158) ~[?:?] at java.base/java.nio.file.Files.createTempFile(Files.java:917) ~[?:?] at me.lucko.luckperms.common.loader.JarInJarClassLoader.extractJar(JarInJarClassLoader.java:133) ~[?:?] at me.lucko.luckperms.common.loader.JarInJarClassLoader.\u003cinit\u003e(JarInJarClassLoader.java:61) ~[?:?] at me.lucko.luckperms.bukkit.loader.BukkitLoaderPlugin.\u003cinit\u003e(BukkitLoaderPlugin.java:40) ~[?:?] at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?] at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78) ~[?:?] at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?] at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499) ~[?:?] at java.base/java.lang.reflect.ReflectAccess.newInstance(ReflectAccess.java:128) ~[?:?] at java.base/jdk.internal.reflect.ReflectionFactory.newInstance(ReflectionFactory.java:350) ~[?:?] at java.base/java.lang.Class.newInstance(Class.java:642) ~[?:?] at org.bukkit.plugin.java.PluginClassLoader.\u003cinit\u003e(PluginClassLoader.java:76) ~[spigot-1.11.2.jar:git-Spigot-3fb9445-6e3cec8] at org.bukkit.plugin.java.JavaPluginLoader.loadPlugin(JavaPluginLoader.java:129) ~[spigot-1.11.2.jar:git-Spigot-3fb9445-6e3cec8] ... 6 more 参考にしたサイト  追加ストレージ（NFS） | さくらの VPS マニュアル さくらのVPSで追加ストレージ(NFS)を利用してみた - saitodev.co  ","categories":"","description":"NFSが原因でLuckPermsが動かなかったので、解決方法などを書きました。","excerpt":"NFSが原因でLuckPermsが動かなかったので、解決方法などを書きました。","ref":"/blog/nfs-vs-luckperms/","tags":"","title":"NFSが原因でLuckPermsが動かなかった話"},{"body":"Gitをインストール Spigotサーバーを構築するには、ビルドをする必要があります。 ビルドをするためにはGitが必要なので、このコマンドでインストールします。\n$ sudo apt install git BuildToolsをダウンロード まず、Spigotサーバー用のディレクトリを作成し、そのディレクトリに移動します。\n$ mkdir spigot \u0026\u0026 cd spigot BuildToolsをダウンロードします。\n$ wget https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar lsコマンドでBuildTools.jarが存在することを確認します。\n$ ls BuildTools.jar ビルドする このコマンドを実行すると、最新バージョンのSpigotのビルドが始まります。\n少し時間がかかりますので、気長に待ちましょう。\n$ java -jar BuildTools.jar バージョンを指定する方法 上のコマンドの末尾に、「–rev」を追加することで、バージョンを指定できます。\n例えば、1.16.5のSpigotをビルドしたい場合は、このコマンドを実行します。\n$ java -jar BuildTools.jar --rev 1.16.5 サーバーを実行する まず、サーバーを実行するためのスクリプトを作成し、お好きなエディタで編集します。 ここでは、start.shを作成し、nanoで編集します。\n$ nano start.sh 下の内容をstart.shに書き込みます。\n#!/bin/bash java -Xms1G -Xmx1G -jar spigot-1.17.1.jar nogui 所有者を設定して、所有者にstart.shを実行する権限を与えます。ここでは、所有者のユーザー名をubuntuとします。\n$ chown ubuntu start.sh $ chmod 700 start.sh 実行します。\n$ ./start.sh 初回起動時はこのような表示が出て、強制的に終了されます。\n[main/ERROR]: Failed to load properties from file: server.properties [main/WARN]: Failed to load eula.txt [main/INFO]: You need to agree to the EULA in order to run the server. Go to eula.txt for more info. これは、「EULAに同意してください」というメッセージです。EULAに同意するために、「eula.txt」を編集します。\n$ nano eula.txt #By changing the setting below to TRUE you are indicating your agreement to our\u003e #Sun Aug 22 19:51:18 JST 2021 eula=false 「eula=false」となっている部分を、「eula=true」に書き換えて、保存してください。 もう一度start.shを実行します。\n$ ./start.sh 設定が読み込まれ、ワールドが生成されます。 Done!と表示されたら成功です！\n[Server thread/INFO]: Done (119.165s)! For help, type \"help\" サーバーを終了する場合は、「stop」と入力してEnterキーを押してください。\n\u003estop ","categories":"","description":"UbuntuにSpigotサーバーを構築する方法","excerpt":"UbuntuにSpigotサーバーを構築する方法","ref":"/docs/spigot/ubuntu/","tags":"","title":"Ubuntu"},{"body":"","categories":"","description":"","excerpt":"","ref":"/blog/","tags":"","title":"雑記帳"},{"body":"BungeeCordをダウンロード まず、BungeeCord用のディレクトリを作成し、そのディレクトリに移動します。\n名前はわかりやすいものにしておくと良いと思います。\n$ mkdir BungeeCord \u0026\u0026 cd BungeeCord BungeeCord.jarをダウンロードします。\n$ wget https://ci.md-5.net/job/BungeeCord/lastSuccessfulBuild/artifact/bootstrap/target/BungeeCord.jar lsコマンドでBungeeCord.jarが存在することを確認しておきます。\n$ ls BungeeCord.jar BungeeCordを実行する まず、BungeeCordを実行するためのスクリプトを作成し、お好きなエディタで編集します。 ここでは、start.shを作成し、nanoで編集します。\n$ touch start.sh \u0026\u0026 nano start.sh 下の内容をstart.shに書き込みます。\n#!/bin/bash java -Xms512M -Xmx512M -jar BungeeCord.jar 所有者を設定して、所有者にstart.shを実行する権限を与えます。 ここでは、所有者のユーザー名をubuntuとします。\n$ chown ubuntu start.sh $ chmod 700 start.sh 実行します。\n$ ./start.sh 画面にログが流れ、最後がこのような文で終わっていたら成功です！\n[INFO] Listening on /0.0.0.0:25577 BungeeCordを終了する場合は、「end」と入力してください。\n\u003eend 参考にしたサイト BungeeCord Installation | SpigotMC - High Performance Minecraft\n","categories":"","description":"UbuntuにBungeeCordを構築する方法","excerpt":"UbuntuにBungeeCordを構築する方法","ref":"/docs/bungeecord/ubuntu/","tags":"","title":"Ubuntu"},{"body":"サーバーのファイルをダウンロード まず、サーバー用のディレクトリを作成し、そのディレクトリに移動します。\n名前はわかりやすいものにしておくと良いと思います。\nubuntu@ubuntu-server:~$ mkdir server \u0026\u0026 cd server サーバーのファイルをダウンロードします。このURLは1.17.1のものです。\nubuntu@ubuntu-server:~/server$ wget https://launcher.mojang.com/v1/objects/a16d67e5807f57fc4e550299cf20226194497dc2/server.jar lsコマンドでserver.jarが存在することを確認しておきます。\nubuntu@ubuntu-server:~/server$ ls server.jar サーバーを実行する まず、サーバーを実行するためのスクリプトを作成し、お好きなエディタで編集します。 ここでは、start.shを作成し、nanoで編集します。\nubuntu@ubuntu-server:~/server$ nano start.sh 下の内容をstart.shに書き込みます。\n#!/bin/bash java -Xms1G -Xmx1G -jar server.jar nogui 所有者を設定して、所有者にstart.shを実行する権限を与えます。 ここでは、所有者のユーザー名をubuntuとします。\nubuntu@ubuntu-server:~/server$ chown ubuntu start.sh ubuntu@ubuntu-server:~/server$ chmod 700 start.sh 実行します。\nubuntu@ubuntu-server:~/server$ ./start.sh 初回起動時はこのような表示が出て、強制的に終了されます。\n[main/ERROR]: Failed to load properties from file: server.properties [main/WARN]: Failed to load eula.txt [main/INFO]: You need to agree to the EULA in order to run the server. Go to eula.txt for more info. これは、「EULAに同意してください」というメッセージです。EULAに同意するために、「eula.txt」を編集します。\nubuntu@ubuntu-server:~/server$ nano eula.txt #By changing the setting below to TRUE you are indicating your agreement to our EULA (https://account.mojang.com/documents/minecraft_eula). #Sat Aug 14 21:23:03 JST 2021 eula=false 「eula=false」となっている部分を、「eula=true」に書き換えて、保存してください。\nもう一度start.shを実行します。\nubuntu@ubuntu-server:~/server$ ./start.sh 設定が読み込まれ、ワールドが生成されます。\nDone!と表示されたら成功です！\n[Server thread/INFO]: Done (62.449s)! For help, type \"help\" サーバーを終了する場合は、「stop」と入力してEnterキーを押してください。\n\u003estop ","categories":"","description":"Ubuntuに公式サーバーを構築する方法","excerpt":"Ubuntuに公式サーバーを構築する方法","ref":"/docs/vanilla/ubuntu/","tags":"","title":"Ubuntuに公式サーバーを構築"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/","tags":"","title":"Categories"},{"body":"\r #td-cover-block-0 { background-image: url(/featured-background_hubf758726a11904a1310bb896233c8bdb_1497465_960x540_fill_q75_catmullrom_top.jpg); } @media only screen and (min-width: 1200px) { #td-cover-block-0 { background-image: url(/featured-background_hubf758726a11904a1310bb896233c8bdb_1497465_1920x1080_fill_q75_catmullrom_top.jpg); } }  ようこそ！ このサイトは現在作成中です。\n       このサイトでは、Minecraft Java Editionのサーバーの設定方法などを中心に解説します。\n   ","categories":"","description":"","excerpt":"\r #td-cover-block-0 { background-image: …","ref":"/","tags":"","title":"Docs"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/","tags":"","title":"Tags"},{"body":"  #td-cover-block-0 { background-image: url(/about/featured-background_hubf758726a11904a1310bb896233c8bdb_1497465_960x540_fill_q75_catmullrom_bottom.jpg); } @media only screen and (min-width: 1200px) { #td-cover-block-0 { background-image: url(/about/featured-background_hubf758726a11904a1310bb896233c8bdb_1497465_1920x1080_fill_q75_catmullrom_bottom.jpg); } }  このサイトについて このサイトは、Minecraftサーバーに関連する情報を共有するためのサイトです。        プライバシーポリシー 当サイトでは、Google アナリティクスを使用しています。\nGoogle アナリティクスは、トラフィックデータを収集するためにCookieを使用します。トラフィックデータは匿名で収集されるため、個人が特定されることはありません。\nGoogle アナリティクスによるトラフィックデータの収集を拒否したい場合は、ブラウザからCookieを無効に設定してください。\nGoogle社のプライバシーポリシーはこちらをご覧ください。\n免責事項 当サイトに情報を掲載するにあたり、可能な限り正確な情報を掲載出来るよう努めていますが、古くなった情報や、間違った情報が含まれている可能性があります。\nそのため、予告なしに編集、削除することがあります。 また、当サイトを利用したことで発生した損害については一切の責任を負いかねます。\nリンク 当サイトはリンクフリーです。 そのため、自由にSNSなどで共有して問題ありません。\n引用 当サイトに掲載されている文章を引用する際は、引用している範囲が分かるようにし、文面を変更せず、出典を明記した上で行ってください。\n制定日 2021年8月4日\n最終更新日 2021年8月14日\n    各コンテンツの説明  サーバーを建てる\nMinecraftサーバーを建てるために必要なこと、サーバーを構築する方法などについて解説したドキュメントです。 雑記帳\nMinecraftサーバーを運営していて思ったことなどを適当に書きます。      使用しているソフトウェアなど  Hugo\n静的サイトを生成するソフトウェア。 Docsy\n技術文書のためのHugoテーマ。 GitHub Pages\nGitHubが運営しているWebサイトホスティングサービス。     ","categories":"","description":"","excerpt":"  #td-cover-block-0 { background-image: …","ref":"/about/","tags":"","title":"このサイトについて"}]